<?php
// Start output buffering at the very beginning to prevent any output before headers
ob_start();

// Set up error reporting
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

include('partial-front/navbar.php');
include('partial-front/login-check.php');

// Enable mysqli to throw exceptions on errors
mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);

// Correct the path to the vendor directory
require __DIR__ . '/vendor/autoload.php';

// Import PhpSpreadsheet classes
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Border;
use PhpOffice\PhpSpreadsheet\Style\Font;
use PhpOffice\PhpSpreadsheet\Style\Color;

// Include necessary files and database connection
// Assuming partial-admin/navbar.php includes the database connection ($conn)

try {
    // Create a new Spreadsheet object
    $spreadsheet = new Spreadsheet();
    $sheet = $spreadsheet->getActiveSheet();

    // Set document properties
    $spreadsheet->getProperties()
        ->setCreator("Your Application")
        ->setLastModifiedBy("Your Application")
        ->setTitle("Shree manakamana ratna ambika secondary school")
        ->setSubject("Khandbari-9 Tumlingtar, Sankhuwasabha")
        ->setSubject("Yearly Class Routine Report")
        ->setSubject("Date")
        ->setDescription("Class routine generated by the system.");

    // Set main title
    $sheet->setCellValue('A1', 'Shree manakamana ratna ambika secondary school');
    $sheet->mergeCells('A1:I1');
    $sheet->getStyle('A1')->getFont()->setBold(true)->setSize(18)->setColor(new Color(Color::COLOR_BLUE));
    $sheet->getStyle('A1')->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

    // Add a subtitle
    $sheet->setCellValue('A2', 'Khandbari-9 Tumlingtar, Sankhuwasabha');
    $sheet->mergeCells('A2:I2');
    $sheet->getStyle('A2')->getFont()->setBold(true)->setSize(14);
    $sheet->getStyle('A2')->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

    // Add a subtitle
    $sheet->setCellValue('A3', 'Yearly routine for classes with teacher name');
    $sheet->mergeCells('A3:I3');
    $sheet->getStyle('A3')->getFont()->setBold(true)->setSize(14);
    $sheet->getStyle('A3')->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

    // Add the date (current year)
    $currentYear = date('Y');
    $sheet->setCellValue('A4', 'Date: ' . $currentYear);
    $sheet->getStyle('A1')->getFont()->setBold(true)->setSize(18)->setColor(new Color(Color::COLOR_BLUE));
    $sheet->mergeCells('A4:I4');

    $sheet->getStyle('A4')->getFont()->setBold(true);
    $sheet->getStyle('A4')->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

    // Main period times
    $main_period_times = [
        '10:15-11:00 AM',
        '11:00-11:45 AM',
        '11:45-12:30 PM',
        '12:30-01:15 PM',
        '01:15-02:00 PM',
        '02:00-02:40 PM',
        '02:40-03:20 PM',
        '03:20-04:00 PM'
    ];
    $period_time_ranges = [];
    foreach ($main_period_times as $time_slot) {
        list($start, $end) = explode('-', $time_slot);
        $period_time_ranges[] = [
            'start' => date('H:i:s', strtotime(trim($start))),
            'end' => date('H:i:s', strtotime(trim($end)))
        ];
    }

    // Set table headers
    $headerStyle = [
        'font' => ['bold' => true, 'color' => ['argb' => Color::COLOR_WHITE]],
        'fill' => ['fillType' => Fill::FILL_SOLID, 'startColor' => ['argb' => 'FF4F81BD']],
        'borders' => ['allBorders' => ['borderStyle' => Border::BORDER_THIN]],
        'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER, 'vertical' => Alignment::VERTICAL_CENTER]
    ];

    $headerRow = 5;
    $sheet->setCellValue('A' . $headerRow, 'Class / Time');
    $col_index = 2; // Start with the integer index for column B
    foreach ($main_period_times as $time_slot) {
        $col_letter = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($col_index);
        $sheet->setCellValue($col_letter . $headerRow, $time_slot);
        $col_index++;
    }

    $last_col_letter = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($col_index - 1);
    $sheet->getStyle('A' . $headerRow . ':' . $last_col_letter . $headerRow)->applyFromArray($headerStyle);

    // Fix: Manually set a wider column width for time periods to ensure they are visible.
    // Columns B through I correspond to the 8 time periods.
    for ($i = 2; $i <= 9; $i++) {
        $col_letter = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($i);
        $sheet->getColumnDimension($col_letter)->setWidth(15);
    }

    // Set auto size for the class name column
    $sheet->getColumnDimension('A')->setAutoSize(true);

    // Fetch data from the database
    $academic_routines_data = [];
    $sql_academic = "SELECT
                        c.name AS class_name,
                        c.section,
                        ar.start_time,
                        ar.end_time,
                        s1.name AS subject1_name,
                        s2.name AS subject2_name,
                        t1.full_name AS teacher1_name,
                        t2.full_name AS teacher2_name,
                        ar.day_range1,
                        ar.day_range2,
                        ar.is_break
                    FROM academic_routine ar
                    JOIN classes c ON ar.class_id = c.cls_id
                    LEFT JOIN subjects s1 ON ar.subject_id1 = s1.subj_id
                    LEFT JOIN subjects s2 ON ar.subject_id2 = s2.subj_id
                    LEFT JOIN teachers t1 ON ar.teacher_id1 = t1.teach_id
                    LEFT JOIN teachers t2 ON ar.teacher_id2 = t2.teach_id
                    ORDER BY c.name, c.section, ar.start_time";

    $result_academic = mysqli_query($conn, $sql_academic);

    if (mysqli_num_rows($result_academic) > 0) {
        while ($row = mysqli_fetch_assoc($result_academic)) {
            $class_label = $row['class_name'] . (empty($row['section']) ? '' : ' (' . $row['section'] . ')');
            $db_start_time = date('H:i:s', strtotime($row['start_time']));
            $period_index = null;

            foreach ($period_time_ranges as $index => $range) {
                if ($db_start_time >= $range['start'] && $db_start_time < $range['end']) {
                    $period_index = $index;
                    break;
                }
            }

            if ($period_index !== null) {
                if (!isset($academic_routines_data[$class_label])) {
                    $academic_routines_data[$class_label] = array_fill(0, count($main_period_times), [
                        'subject1' => '',
                        'subject2' => '',
                        'teacher1' => '',
                        'teacher2' => '',
                        'is_break' => 0,
                        'day_range1' => '',
                        'day_range2' => ''
                    ]);
                }
                $academic_routines_data[$class_label][$period_index] = [
                    'subject1' => $row['subject1_name'] ?? '',
                    'subject2' => $row['subject2_name'] ?? '',
                    'teacher1' => $row['teacher1_name'] ?? '',
                    'teacher2' => $row['teacher2_name'] ?? '',
                    'is_break' => $row['is_break'] ?? 0,
                    'day_range1' => $row['day_range1'] ?? '',
                    'day_range2' => $row['day_range2'] ?? ''
                ];
            }
        }
    }

    // --- Fetch and process data for Leisure Teacher ---
    $leisure_teacher_data = array_fill(0, count($main_period_times), []);
    $sql_leisure = "SELECT
                        SUBSTRING_INDEX(t.full_name, ' ', 1) AS teacher_first_name,
                        lt.st_time
                    FROM leisure_teacher lt
                    JOIN teachers t ON lt.teacher_id = t.teach_id
                    ORDER BY lt.st_time";
    $result_leisure = mysqli_query($conn, $sql_leisure);

    if (mysqli_num_rows($result_leisure) > 0) {
        while ($row = mysqli_fetch_assoc($result_leisure)) {
            $db_st_time = date('H:i:s', strtotime($row['st_time']));
            $period_index = null;

            foreach ($period_time_ranges as $index => $range) {
                if ($db_st_time >= $range['start'] && $db_st_time < $range['end']) {
                    $period_index = $index;
                    break;
                }
            }
            if ($period_index !== null) {
                $leisure_teacher_data[$period_index][] = $row['teacher_first_name'];
            }
        }
    }

    // Write data to the spreadsheet
    $row = $headerRow + 1;
    $breakStyle = [
        'fill' => ['fillType' => Fill::FILL_SOLID, 'startColor' => ['argb' => 'FFFFFF00']], // Yellow for break
        'font' => ['bold' => true]
    ];
    $cellStyle = [
        'alignment' => ['horizontal' => Alignment::HORIZONTAL_CENTER, 'vertical' => Alignment::VERTICAL_CENTER, 'wrapText' => true],
        'borders' => ['allBorders' => ['borderStyle' => Border::BORDER_THIN]]
    ];
    $leisureRowStyle = [
        'font' => ['bold' => true]
    ];

    if (empty($academic_routines_data) && empty($leisure_teacher_data)) {
        $sheet->setCellValue('A' . $row, 'No academic routine or leisure teacher found.');
        $sheet->mergeCells('A' . $row . ':I' . $row);
        $sheet->getStyle('A' . $row)->getFont()->setColor(new Color(Color::COLOR_RED));
    } else {
        foreach ($academic_routines_data as $class_label => $routine_periods) {
            $sheet->setCellValue('A' . $row, $class_label);
            $sheet->getStyle('A' . $row)->getFont()->setBold(true);
            $sheet->getStyle('A' . $row)->applyFromArray($cellStyle);

            $col_index = 1;
            foreach ($routine_periods as $period_info) {
                $cell_content = '';
                $cell_style_override = [];

                if ($period_info['is_break'] == 1) {
                    $cell_content = 'BREAK';
                    $cell_style_override = $breakStyle;
                } else {
                    $subjects = [];
                    if (!empty($period_info['subject1'])) $subjects[] = $period_info['subject1'];
                    if (!empty($period_info['subject2'])) $subjects[] = $period_info['subject2'];
                    if (!empty($subjects)) {
                        $cell_content .= implode(' / ', $subjects) . "\n";
                    }

                    $teachers = [];
                    if (!empty($period_info['teacher1'])) $teachers[] = $period_info['teacher1'];
                    if (!empty($period_info['teacher2'])) $teachers[] = $period_info['teacher2'];
                    if (!empty($teachers)) {
                        $cell_content .= implode(' / ', $teachers) . "\n";
                    }

                    $day_ranges = [];
                    if (!empty($period_info['day_range1'])) $day_ranges[] = $period_info['day_range1'];
                    if (!empty($period_info['day_range2'])) $day_ranges[] = $period_info['day_range2'];
                    if (!empty($day_ranges)) {
                        $cell_content .= 'Day: ' . implode(' / ', $day_ranges);
                    }
                }

                $col_letter = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($col_index + 1);
                $sheet->setCellValue($col_letter . $row, $cell_content);
                $sheet->getStyle($col_letter . $row)->applyFromArray($cellStyle);
                if (!empty($cell_style_override)) {
                    $sheet->getStyle($col_letter . $row)->applyFromArray($cell_style_override);
                }

                $col_index++;
            }
            $row++;
        }

        // Add the leisure teacher row
        $sheet->setCellValue('A' . $row, 'Leisure Teacher');
        $sheet->getStyle('A' . $row)->applyFromArray(array_merge($cellStyle, $leisureRowStyle));

        $col_index = 1;
        foreach ($leisure_teacher_data as $period_teachers) {
            $cell_content = '-';
            if (!empty($period_teachers)) {
                $cell_content = implode(', ', $period_teachers);
            }

            $col_letter = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($col_index + 1);
            $sheet->setCellValue($col_letter . $row, $cell_content);
            $sheet->getStyle($col_letter . $row)->applyFromArray($cellStyle);

            $col_index++;
        }
    }

    // Clear any previous output before sending the file.
    ob_end_clean();

    // Finalize the download
    $writer = new Xlsx($spreadsheet);
    $fileName = "yearly_class_routine.xlsx";

    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    header('Content-Disposition: attachment;filename="' . $fileName . '"');
    header('Cache-Control: max-age=0');

    $writer->save('php://output');
    exit();
} catch (Exception $e) {
    // If an error occurs, clean the output buffer and display an error page.
    ob_end_clean();
    header('Content-Type: text/html');
    echo "<h1>An error occurred while generating the Excel file.</h1>";
    echo "<p>Please contact support with the following information:</p>";
    echo "<p><strong>Error Message:</strong> " . htmlspecialchars($e->getMessage()) . "</p>";
    error_log($e->getMessage());
    exit();
}